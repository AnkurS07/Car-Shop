
class Appointment {
    
	AppStatus {
		Booked {
				noShow(Customer c) / {addNoShow(c);} -> Final;
				
				cancel [canCancel()] -> Final;
				cancel [!canCancel()] / {rejectCancel();} -> Booked;
				
				update [canUpdate()] {updateApp();}-> Booked;
				update [!canUpdate()] / {rejectUpdate();} -> Booked;
				
				start -> InProgress;
		}
		
		InProgress {
		
			start -> InProgress;
			
			cancel / {rejectCancel();} -> InProgress;
			cancel / {!rejectCancel();} -> Final;
			
			update [!canUpdate()] / {rejectUpdate();} -> Booked;
            update [canUpdate()] -> InProgress;
            
			noShow(Customer c) / {rejectNoShow(c);} -> InProgress;
			
			end -> Final;
		}
	}

	private void addNoShow(Customer c) {
		c.setNoShowCount(c.getNoShowCount() + 1);
	}
	
	private void rejectUpdate() {

	}
  
	private void rejectCancel() {
	    
	}
	
	private void rejectNoShow(Customer c) {
	
	}
	
	private boolean canUpdate() {
	  return true;
	}
	  
	private boolean canCancel() {
	  return true; 
	}
	
	private boolean updateApp() {
	 return true;
	}
}
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ca.mcgill.ecse.carshop.application;

import java.io.File;
import java.sql.Date;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import ca.mcgill.ecse.carshop.model.CarShop;
import ca.mcgill.ecse.carshop.view.CarShopPage;
import ca.mcgill.ecse223.carshop.controller.AppointmentController;
import ca.mcgill.ecse223.carshop.controller.CarShopController;
import ca.mcgill.ecse223.carshop.persistence.CarshopPersistence;

public class CarShopApplication {

	private static CarShop carShop;
	private static java.util.Date systemDate;
	private static String loggedInUser;

	public String getGreeting() {
		return "Starting CarShop Application...";
	}

	public static void main(String[] args) throws Exception{
		// Demo Parameters 
		//   (Don't use the UI and the console demo at the same time to avoid duplicate problems)
		//	 (Always clear the save before the console demo to avoid duplicate problems)
		boolean clearSave = false;
		boolean consoleDemo = false;
		boolean runUI = true;

		System.out.println(new CarShopApplication().getGreeting() + "\n");
		System.out.println(
				"Demo parameters :\n\tClear save:\t"+clearSave+
				"\n\tConsole demo:\t"+consoleDemo+
				"\n\tShow UI:\t"+runUI+"\n");

		// Clearing previous save (For demo)
		if (clearSave) {
			System.out.println("Clearing previous CarShop Save...\n");
			clearCarShopSave();
		}

		// Set System date and time
		setToCurrentDate();

		if (clearSave && !consoleDemo) CarShopController.createOwner("owner", "owner");

		// Run the UI
		if (runUI) {
			System.out.println("Launching UI...");
			java.awt.EventQueue.invokeLater(new Runnable() {
				public void run() {
					new CarShopPage().setVisible(true);
				}
			});
		}
	}

	public static CarShop getCarShop() {
		if (carShop == null) {
			try {
				carShop = CarshopPersistence.load();
			}catch (Exception e) {
				carShop=new CarShop();
			}
		}
		return carShop;

	}

	/**
	 * Gets the current logged in user of the system.
	 * @return The current logged in user of the system.
	 * @throws Exception
	 */
	public static String getLoggedInUser() throws Exception {
		try {
			return loggedInUser;
		}
		catch (RuntimeException e) {
			throw new Exception(e.getMessage());
		}
	}

	/**
	 * Sets the current logged in user of the system.
	 * @return 
	 * @throws Exception
	 */	
	public static void setLoggedInUser(String loggedInUser) throws Exception {
		try {
			CarShopApplication.loggedInUser = loggedInUser;
		}
		catch (RuntimeException e) {
			throw new Exception(e.getMessage());
		}
	}

	/**
	 * Gets the current date of the system. Be careful, this uses java.util.date unlike the Date in the Umple models that is of type java.sql.Date
	 * @return The current date of the system.
	 * @throws Exception
	 */
	public static java.util.Date getSystemDate() throws Exception {
		try {
			return systemDate;
		}
		catch (RuntimeException e) {
			throw new Exception(e.getMessage());
		}
	}

	/**
	 * Sets the system date to the current local time
	 * @throws Exception
	 */
	public static void setToCurrentDate() throws Exception {
		try {
			DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd+HH:mm");  
			LocalDateTime now = LocalDateTime.now();  
			Date systemDate = AppointmentController.parseDate(dtf.format(now), "yyyy-MM-dd+HH:mm");
			CarShopApplication.setSystemDate(systemDate);
		}
		catch (RuntimeException e) {
			throw new Exception(e.getMessage());
		}
	}

	/**
	 * Sets the current date of the system. Uses a Singleton class to persist information.
	 * @param date Date to be set.
	 * @throws Exception
	 */
	public static void setSystemDate(java.util.Date date) throws Exception {
		try {
			CarShopApplication.systemDate = date;
		}
		catch (RuntimeException e) {
			throw new Exception(e.getMessage());
		}
	}

	// Helper method that clears the save by deleting the save file
	private static void clearCarShopSave() {
		File saveFile = new File("data.carshop"); 
		saveFile.delete();
	}
}
